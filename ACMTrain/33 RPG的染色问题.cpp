// 33: RPG的染色问题

/*
# include <stdio.h>
# include <math.h>
*/
/*
long long paint(long long n)
{
	if (n == 1)
		return 3;
	else if (n == 2 || n == 3)
		return 6;
	else
		return paint(n - 1) + 2 * paint(n - 2);
	//n-1格与第一个涂色不同(paint(n-1)) n-1格与第一格涂色相同 paint(n-2)*2
}
*/
/*
int main()
{
	int n;

	long long a[] = { 0, 3,6,6,18,30,66,126,258,510,1026,2046,4098,8190,16386,32766,65538,131070,262146,524286,1048578,2097150,4194306,8388606,16777218,33554430,67108866,134217726,268435458,536870910,1073741826,2147483646,4294967298,8589934590,17179869186,34359738366,68719476738,137438953470,274877906946,549755813886,1099511627778,2199023255550,4398046511106,8796093022206,17592186044418,35184372088830,70368744177666,140737488355326,281474976710658,562949953421310,1125899906842626 };
	
	while (scanf("%d", &n) != EOF)
	{
		printf("%lld\n", a[n]);
	}
	
	return 0;
}
*/

/*
#include <iostream>
using namespace std;
int main()
{
	int n;
	long long dp[51];
	dp[0] = 0;
	dp[1] = 3;
	dp[2] = 6;
	dp[3] = 6;

	for (int i = 4; i <= 50; i++)
	{
		dp[i] = dp[i - 1] + 2 * dp[i - 2];
	}
	
	for(int i =1;i<51;i++)
		cout << dp[i] <<  endl;
	return 0;
}
*/

